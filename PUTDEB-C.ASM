
;PUT_DEBUG_ATTR_SIZE EQU 0
;PUT_DEBUG_ATTR_SIZE EQU 1

;
;
PUT_DEBUG:
	;;push	es
	;;mov	ax,[LBL_SEG]
	;;mov	es,ax

;	MOV	AL,[FLG.L]
;	OR	AL,AL
;	JE	PUT_DEBUG.E

	MOV	AL,[FLG.D]
	OR	AL,AL
	JE	PUT_DEBUG.E

	MOV	EDX,[LBL.NO]
	OR	EDX,EDX
	JE	PUT_DEBUG.E


	;seek

;	CALL	FLUSH_W.BUF

	CALL	INIT_W.BUF

;	MOV	AX,4000h	;truncate
;	MOV	BX,[HDL2]
;	MOV	CX,0
;	MOV	DX,0
;	INT	21h

	MOV	EBX,[HDL2]
	MOV	ECX,0
	MOV	EDX,0
	MOV	AL,01H
	CALL	SYS_seek

	SHL	EDX,10h
	MOV	DX,AX

	PUSHAD
	MOV	EBX,EDX
	CALL	PUTH2
	POPAD

PUT_DEBUG.ALIGN.1:
	;TEST	DX,0fh
	MOV	AX,DX
	AND	AX,1000h-1	;FILE_ALIGN-1
	JE	PUT_DEBUG.ALIGN.2

	MOV	AL,'%'
	CALL	PUT_DEBUG_CHR
	INC	EDX
	JMP	PUT_DEBUG.ALIGN.1
PUT_DEBUG.ALIGN.2:

;	MOV	AL,'#'
;	CALL	PUT_DEBUG_CHR
;	CALL	PUT_DEBUG_CHR
;	MOV	AL,'1'
;	CALL	PUT_DEBUG_CHR
;	CALL	PUT_DEBUG_CHR

	XOR	EAX,EAX
	MOV	AX,[LBL.NO]
	MOV	[COFF_SYMBOLS_HEADER],EAX
	MOV	AX,20h
	MOV	[COFF_SYMBOLS_HEADER+4],EAX

	MOV	[COFF_SYMBOLS_HEADER_OFF],EDX

	MOV	ESI,COFF_SYMBOLS_HEADER
	MOV	CL,20h
	CALL	PUT_DEBUG_WRITE_BUF

	ADD	EDX,20h

	PUSH	EDX
	XOR	EAX,EAX
	XOR	EDX,EDX
	MOV	AX,[LBL.NO]
	MOV	DX,AX
	SHL	EAX,4
	ADD	EAX,EDX
	ADD	EAX,EDX		;eax*=12h
	POP	EDX
	ADD	EAX,EDX

		mov	eax,4
	MOV	[PUT_DEBUG_LONGSTR_PNT],EAX

	XOR	EAX,EAX
	MOV	[PUT_DEBUG_LONGSTR_TOTAL_SIZE],EAX



	MOV	EDX,[LBL.NO]
	MOV	EBX,W.LBL
PUT_DEBUG.0:
	;;MOV	CH,es:[BX]		;len	es:= 26h
	MOV	CH,[EBX]
	INC	EBX

	INC	EBX		;link pnt skip
	INC	EBX
	;**
	INC	EBX
	INC	EBX

	CMP	CH,8
	JBE	PUT_DEBUG.short

	XOR	EAX,EAX
	MOV	[COFF_SYMBOL],EAX

	MOV	EAX,[PUT_DEBUG_LONGSTR_PNT]
	MOV	[COFF_SYMBOL+4],EAX

	MOVZX	EAX,CH
	INC	EAX
	ADD	[PUT_DEBUG_LONGSTR_PNT],EAX

	ADD	[PUT_DEBUG_LONGSTR_TOTAL_SIZE],EAX
	JMP	PUT_DEBUG.1

PUT_DEBUG.short:
	XOR	EAX,EAX
	MOV	[COFF_SYMBOL],EAX
	MOV	[COFF_SYMBOL+4],EAX

	PUSH	EBX
	PUSH	ECX
	PUSH	EDX
	PUSH	ESI

	MOV	ESI,COFF_SYMBOL
PUT_DEBUG.short.1:
	;;MOV	AL,ES:[BX]
	MOV	AL,[EBX]
	MOV	[ESI],AL
	;CALL	PUT_DEBUG_CHR
	INC	ESI
	INC	EBX
	DEC	CH
	JNE	PUT_DEBUG.short.1

	POP	ESI
	POP	EDX
	POP	ECX
	POP	EBX

PUT_DEBUG.1:
	;;MOV	AL,es:[BX]		;string
	MOV	AL,[EBX]
	;CALL	PUT.L20
	INC	EBX
	DEC	CH
	JNE	PUT_DEBUG.1

	;MOV	EAX,es:[bx]	;value
	MOV	EAX,[ebx]
	CMP	EAX,IMAGE_BASE
	JB	PUT_DEBUG.30
	MOV	ESI,[O.ADR1]
	ADD	ESI,10000H	;
	CMP	EAX,ESI
	JNB	PUT_DEBUG.30

	SUB	EAX,IMAGE_BASE	;00400000h
PUT_DEBUG.30:
	MOV	[COFF_SYMBOL+8],EAX

	add	ebx,4
	;inc	ebx	;attr
	add	ebx,PUT_DEBUG_ATTR_SIZE


	MOV	ESI,COFF_SYMBOL
	MOV	CL,12h
	CALL	PUT_DEBUG_WRITE_BUF

	;INC	BX
	DEC	EDX
	OR	EDX,EDX
	JNE	PUT_DEBUG.0

;	MOV	AL,'#'
;	CALL	PUT_DEBUG_CHR
;	CALL	PUT_DEBUG_CHR
;	MOV	AL,'2'
;	CALL	PUT_DEBUG_CHR
;	CALL	PUT_DEBUG_CHR
;------- write long strings

	MOV	EAX,[PUT_DEBUG_LONGSTR_TOTAL_SIZE]
	ADD	EAX,4
	CALL	PUT_DEBUG_CHR
	SHR	EAX,8
	CALL	PUT_DEBUG_CHR
	SHR	EAX,8
	CALL	PUT_DEBUG_CHR
	SHR	EAX,8
	CALL	PUT_DEBUG_CHR

PUT_DEBUG.50:


	MOV	EDX,[LBL.NO]
	MOV	EBX,W.LBL
PUT_DEBUG.52:
	;;MOV	CH,es:[BX]		;len	es:= 26h
	MOV	CH,[EBX]
	INC	EBX

	INC	EBX		;link pnt skip
	INC	EBX
	;**
	INC	EBX
	INC	EBX

	CMP	CH,8
	JBE	PUT_DEBUG.55

PUT_DEBUG.53:
	;MOV	AL,es:[BX]		;string
	MOV	AL,[EBX]
	CALL	PUT_DEBUG_CHR
	INC	EBX
	DEC	CH
	JNE	PUT_DEBUG.53

	MOV	AL,0
	CALL	PUT_DEBUG_CHR

	JMP	PUT_DEBUG.60

PUT_DEBUG.55:
	INC	EBX
	DEC	CH
	JNE	PUT_DEBUG.55

PUT_DEBUG.60:
	add	ebx,4		;value
	;inc	ebx	;attr
	add	ebx,PUT_DEBUG_ATTR_SIZE

	;INC	BX
	DEC	EDX
	OR	EDX,EDX
	JNE	PUT_DEBUG.52

	MOV	AL,0
	CALL	PUT_DEBUG_CHR
	CALL	PUT_DEBUG_CHR
	CALL	PUT_DEBUG_CHR
	CALL	PUT_DEBUG_CHR

	CALL	FLUSH_W.BUF
PUT_DEBUG.E:
	;;pop	es
	RET

;ch	len
;es:bx	name
;
PUT_DEBUG.WRITE_LONGSTR:
	PUSH	ECX

	XOR	EAX,EAX
	MOV	AL,CH
	INC	EAX
	ADD	[PUT_DEBUG_LONGSTR_PNT],EAX

PUT_DEBUG.WRITE_LONGSTR.10:
	;;MOV	AL,ES:[BX]
	MOV	AL,[EBX]
	PUSH	EBX
	CALL	PUT_DEBUG_CHR
	POP	EBX
	INC	EBX
	DEC	CH
	JNE	PUT_DEBUG.WRITE_LONGSTR.10

	MOV	AL,0
	CALL	PUT_DEBUG_CHR

	POP	ECX
	RET


;
PUT_DEBUG_WRITE_BUF:
	MOV	AL,[ESI]
	CALL	PUT_DEBUG_CHR
	INC	ESI
	DEC	CL
	JNE	PUT_DEBUG_WRITE_BUF

	RET

;

PUT_DEBUG_CHR:
	PUSHAD

		;** for debug
		;PUSHAD
		;MOV	EBX,[W.LEFT]
		;CALL	PUTH4
		;MOV	AL,' '
		;CALL	DOS02
		;POPAD

	CALL	PUTCHR
	POPAD
	RET

;
INIT_W.BUF:
	MOV	EBX,W.BUF
	MOV	[W.LEFT],EBX
	MOV	EBX,USRDMA+R.BUF
	MOV	[W.PNT],EBX
	RET
;
FLUSH_W.BUF:
	MOV	EBX,W.BUF
	MOV	EDX,[W.LEFT]
	SUB	EBX,EDX
	JE	FLUSH_W.BUF.R	;I10

	MOV	ECX,EBX
	MOV	EDX,USRDMA+R.BUF
	MOV	EBX,[HDL2]
	PUSH	ECX
	CALL	SYS_write
	POP	ECX
	JB	ERR3

	CMP	EAX,ECX
	JNE	ERR3
FLUSH_W.BUF.R:
	CALL	INIT_W.BUF
	RET

