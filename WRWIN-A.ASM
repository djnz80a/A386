
;
WRITE_WIN_HEADER:
	MOV	ESI,STR_DOT_TEXT
	CALL	GET_LABEL_VALUE
	MOV	[TEXT.ADR],EAX
	MOV	EBX,EAX
	CALL	PUTH4

	MOV	ESI,STR_DOT_RDATA
	CALL	GET_LABEL_VALUE
	MOV	[RDATA.ADR],EAX
	MOV	EBX,EAX
	CALL	PUTH4

	MOV	ESI,STR_DOT_DATA
	CALL	GET_LABEL_VALUE
	MOV	[DATA.ADR],EAX
	MOV	EBX,EAX
	CALL	PUTH4

	MOV	ESI,STR_DOT_DATA_END
	CALL	GET_LABEL_VALUE
	MOV	[DATA_END.ADR],EAX
	MOV	EBX,EAX
	CALL	PUTH4


	MOV	ESI,STR_ENTRY_IAT
	CALL	GET_LABEL_VALUE
	MOV	[ENTRY_IAT.ADR],EAX
	MOV	EBX,EAX
	CALL	PUTH4

	MOV	ESI,STR_ENTRY_IMPORT
	CALL	GET_LABEL_VALUE
	MOV	[ENTRY_IMPORT.ADR],EAX
	MOV	EBX,EAX
	CALL	PUTH4


	MOV	AX,4200H
	MOV	EBX,[HDL2]
	XOR	ECX,ECX
	XOR	EDX,EDX
	CALL	INT21_seek	;INT	21H

	MOV	EDI,HEADER_BUF
	MOV	ECX,FILE_ALIGN
	XOR	EAX,EAX
	REP
	STOSB

	MOV	ESI,WIN_HEADER
	MOV	EDI,HEADER_BUF
	MOV	ECX,WIN_HEADER_END-WIN_HEADER
	CLD
	REP
	MOVSB


	MOV	EDI,HEADER_BUF

	MOV	EAX,0
	MOV	[EDI+0CCH],EAX	;PointerToSymbolTable
	MOV	EAX,0
	MOV	[EDI+0D0H],EAX	;NumberOfSymbols

	;MOV	EAX,[O.ADR1]
	MOV	EAX,[DATA_END.ADR]
	MOV	EBX,[ORG.ADR]
	SUB	EAX,EBX
	MOV	[EDI+0DCH],EAX	;SizeOfCode CODE_SIZE

	;MOV	EAX,0
	MOV	[EDI+0E0H],EAX	;SizeOfInitializedData
	MOV	EAX,0
	MOV	[EDI+0E4H],EAX	;SizeOfUninitializedData

	MOV	EAX,0	;[ORG.ADR]
	ADD	EAX,FILE_ALIGN
	MOV	[EDI+0E8H],EAX	;AddressOfEntryPoint
	;MOV	EAX,
	MOV	[EDI+0ECH],EAX	;BaseOfCode
	;MOV	EAX,
	MOV	[EDI+0F0H],EAX	;BaseOfData

	;MOV	EAX,[O.ADR1]
	MOV	EAX,[DATA_END.ADR]
	MOV	EBX,[ORG.ADR]
	SUB	EAX,EBX
	ADD	EAX,FILE_ALIGN
	MOV	[EDI+110H],EAX	;SizeOfImage BASE_SIZE = _DATA_RVA+_DATA_SIZE
	MOV	EAX,FILE_ALIGN
	MOV	[EDI+114H],EAX	;SizeOfHeader _TEXT-BASE

;

	MOV	EAX,[ENTRY_IMPORT.ADR]
	MOV	EBX,[ORG.ADR]
	SUB	EAX,EBX
	ADD	EAX,FILE_ALIGN
	MOV	[EDI+140H],EAX	;ENTRY_IMPORT-_RDATA+_RDATA_RVA	IMAGE_DIRECTORY_ENTRY_IMPORT
	MOV	EAX,[DATA.ADR]		;TODO: not precise size
	MOV	EBX,[ENTRY_IMPORT.ADR]
	SUB	EAX,EBX
	MOV	[EDI+144H],EAX	;ENTRY_IMPORT_END-ENTRY_IMPORT

	MOV	EAX,0
	MOV	[EDI+168H],EAX	;0 IMAGE_DIRECTORY_ENTRY_DEBUG
	MOV	EAX,0
	MOV	[EDI+16CH],EAX	;0

	MOV	EAX,[ENTRY_IAT.ADR]
	MOV	EBX,[ORG.ADR]
	SUB	EAX,EBX
	ADD	EAX,FILE_ALIGN
	MOV	[EDI+198H],EAX	;IMAGE_DIRECTORY_ENTRY_IAT
	MOV	EAX,[ENTRY_IMPORT.ADR]
	MOV	EBX,[ENTRY_IAT.ADR]
	SUB	EAX,EBX
	MOV	[EDI+19CH],EAX	;ENTRY_IAT_END-ENTRY_IAT	;0ch

;".text"
	;MOV	EAX,[O.ADR1]
	MOV	EAX,[RDATA.ADR]
	MOV	EBX,[ORG.ADR]
	SUB	EAX,EBX
	MOV	EDX,EAX
	MOV	[EDI+1C0H],EAX	;_TEXT_FILL-_TEXT
	MOV	EAX,FILE_ALIGN	;[ORG.ADR]
	MOV	[EDI+1C4H],EAX	;_TEXT_RVA
	MOV	EAX,EDX
	MOV	[EDI+1C8H],EAX	;_TEXT_END-_TEXT
	MOV	EAX,FILE_ALIGN
	MOV	[EDI+1CCH],EAX	;_TEXT-BASE

;".rdata"
	MOV	EAX,[DATA.ADR]
	MOV	EBX,[RDATA.ADR]
	SUB	EAX,EBX
	MOV	EDX,EAX
	MOV	[EDI+1E8H],EAX	;_RDATA_FIL-_RDATA
	MOV	EAX,[RDATA.ADR]
	MOV	EBX,[ORG.ADR]
	SUB	EAX,EBX
	ADD	EAX,FILE_ALIGN
	MOV	[EDI+1ECH],EAX	;_RDATA_RVA
	;MOV	EAX,EDX
	MOV	[EDI+1F0H],EDX	;_RDATA_END-_RDATA
	;MOV	EAX,
	MOV	[EDI+1F4H],EAX	;_RDATA-BASE

;".data"
	;MOV	EAX,[O.ADR1]
	MOV	EAX,[DATA_END.ADR]
	;MOV	EAX,[DATA.ADR]
	;MOV	EBX,[ORG.ADR]
	MOV	EBX,[DATA.ADR]
	SUB	EAX,EBX
	MOV	EDX,EAX
	MOV	[EDI+210H],EAX	;DATA_ADD+_DATA_FIL-_DATA

	MOV	EAX,[DATA.ADR]
	MOV	EBX,[ORG.ADR]
	SUB	EAX,EBX
	ADD	EAX,FILE_ALIGN
	MOV	[EDI+214H],EAX	;_DATA_RVA
	;MOV	EAX,EDX
	MOV	[EDI+218H],EDX	;_DATA_END-_DATA
	;MOV	EAX,FILE_ALIGN
	MOV	[EDI+21CH],EAX	;_DATA-BASE

	MOV	EAX,0
	MOV	[EDI+238H],EAX	;_DEBUG_FILL-_DEBUG
	MOV	[EDI+23CH],EAX	;_DEBUG_RVA
	MOV	[EDI+240H],EAX	;_DEBUG_END-_DEBUG
	MOV	[EDI+244H],EAX	;_DEBUG-BASE



	MOV	AX,4000H	;write
	MOV	EBX,[HDL2]
	MOV	EDX,HEADER_BUF
	MOV	ECX,FILE_ALIGN
	CALL	INT21_write	;INT	21H

	RET

;
;	esi:pnt toname
;	>cf =0:ok / =1:fail
;	>eax value
;
GET_LABEL_VALUE:
	MOV	EBX,[PNT2]
	PUSH	EBX

	CALL	STRLEN
	PUSH	EAX
	;MOV	ESI,STR_IMAGE_DEBUG_DIRECTORY	;ENTRY_DEBUG
	MOV	EDI,WORK2+1
	CALL	STRCPY
	POP	EAX

	;MOV	AL,25		;len
	MOV	[WORK2],AL
	MOV	EBX,WORK2
	MOV	[PNT2],EBX
	CALL	SRCHL
	POP	EBX
	MOV	[PNT2],EBX
	JNB	GET_LABEL_VALUE.10

	MOV	EDX,EMES_NO_LABEL
	CALL	DOS09

	MOV	EDX,WORK2+1
	CALL	DOS09_Z

	MOV	AL,0DH
	CALL	DOS02
	MOV	AL,0AH
	CALL	DOS02

	MOV	EAX,-1
	STC
	JMP	GET_LABEL_VALUE.R

GET_LABEL_VALUE.10:
	MOV	EAX,[VAL1]
	pushad
	mov	ebx,eax
	call	puth4
	popad

	CLC

GET_LABEL_VALUE.R:
	RET


STR_DOT_TEXT:	DB	'.TEXT',0
STR_DOT_RDATA:	DB	'.RDATA',0
STR_DOT_DATA:	DB	'.DATA',0
STR_DOT_DATA_END:DB	'.DATA_END',0

STR_ENTRY_IAT:	DB	'.ENTRY_IAT',0
STR_ENTRY_IMPORT:DB	'.ENTRY_IMPORT',0
